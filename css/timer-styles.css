/* Timer section styles */
.timer-section {
    margin-bottom: 3rem;
    padding: 2rem;
}

/* Pattern System */
.pattern-selector {
    margin: 2rem 0;
    text-align: center;
}

.pattern-tabs {
    margin-bottom: 2rem;
    display: inline-flex;
    background-color: rgba(48, 48, 48, 0.7);
    padding: 0.3rem;
    border-radius: 20px;
    border: 1px solid var(--accent-color);
}

.pattern-btn {
    background-color: transparent;
    color: var(--text-color);
    border: none;
    padding: 0.5rem 2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Courier New', monospace;
    border-radius: 15px;
    position: relative;
}

.pattern-btn.active {
    background-color: var(--accent-color);
    color: var(--bg-color);
}

.pattern-btn:not(.active):hover {
    color: var(--accent-color);
}

.pattern-content {
    max-width: 800px;
    margin: 0 auto;
    padding: 1rem;
}

.pattern-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1.5rem;
    margin: 1rem 0;
}

.pattern-card {
    background-color: rgba(48, 48, 48, 0.7);
    border: 1px solid var(--accent-color);
    border-radius: 8px;
    padding: 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
}

.pattern-card h3 {
    margin: 0 0 1rem 0;
    color: var(--accent-color);
    font-size: 1.2rem;
    font-family: 'Courier New', monospace;
}

.pattern-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(100, 255, 218, 0.1);
}

.pattern-card.active {
    background-color: rgba(100, 255, 218, 0.1);
}

.pattern-preview {
    margin-top: 1rem;
}

/* Pattern card phase indicators - simplified to plain dots */
.phase-dots {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.8rem;
    position: relative;
    padding: 0.5rem 0;
}

.phase-dots::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 1px;
    background-color: var(--secondary-color);
    z-index: 0;
}

/* Simple plain dots without any effects - fixed to stay visible */
.dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    position: relative;
    z-index: 1;
    display: block !important;
    /* Force display */
}

/* Different color variants - solid colors */
.dot.focus {
    background-color: #ff6b6b;
}

.dot.break {
    background-color: #4ecdc4;
}

.dot.inhale {
    background-color: #45b7d1;
}

.dot.hold {
    background-color: #96ceb4;
}

.dot.exhale {
    background-color: #d4a373;
}

/* Remove problem styles but keep dots visible */
.pattern-card:hover .dot,
.pattern-card.active .dot {
    /* Remove transform and other effects but keep visibility */
    transform: none;
    box-shadow: none;
    animation: none;
    display: block !important;
    visibility: visible !important;
    opacity: 1 !important;
}

/* Remove all conflicting styles that might hide dots */
.dot::before,
.dot::after,
.dot span {
    display: none;
}

/* Remove these problematic hover overrides completely */
.pattern-card:hover .dot.focus,
.pattern-card:hover .dot.break,
.pattern-card:hover .dot.inhale,
.pattern-card:hover .dot.hold,
.pattern-card:hover .dot.exhale,
.dot::before,
.dot span,
.pattern-card:hover .dot.focus,
.pattern-card:hover .dot.break,
.pattern-card:hover .dot.inhale,
.pattern-card:hover .dot.hold,
.pattern-card:hover .dot.exhale {
    /* Delete these style blocks completely */
}

.patterns-controls {
    display: flex;
    justify-content: flex-end;
    margin-bottom: 1rem;
}

/* Saved Patterns */
.saved-patterns-section {
    background-color: rgba(48, 48, 48, 0.7);
    border-radius: 5px;
    padding: 1.5rem;
    margin: 2rem 0;
}

.saved-patterns-controls {
    display: flex;
    gap: 1rem;
    margin-top: 1rem;
}

#saved-pattern-select {
    flex: 1;
    background-color: var(--bg-color);
    color: var(--text-color);
    border: 1px solid var(--accent-color);
    padding: 0.5rem;
    border-radius: 3px;
    font-family: 'Courier New', monospace;
}

.delete-pattern {
    color: #ff6464;
    border-color: #ff6464;
}

.delete-pattern:hover {
    background-color: #ff6464;
    color: var(--bg-color);
}

/* Timer Display */
.timer-display {
    text-align: center;
    margin: 2rem 0;
    position: relative;
}

.timer-display .time {
    font-family: 'Courier New', monospace;
    font-size: 4rem;
    color: var(--accent-color);
    text-shadow: 0 0 10px rgba(100, 255, 218, 0.3);
    transition: transform 0.3s ease;
}

.phase-info {
    font-size: 1.2rem;
    margin: 1rem 0;
    color: var(--text-color);
    opacity: 0.8;
}

/* Clickable phase-info for custom timer mode */
.phase-info.clickable {
    cursor: pointer;
    padding: 0.5rem 1rem;
    border-radius: 20px;
    background-color: rgba(48, 48, 48, 0.5);
    border: 1px dashed transparent;
    transition: all 0.3s ease;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.phase-info.clickable:hover {
    border-color: var(--accent-color);
    background-color: rgba(100, 255, 218, 0.1);
}

/* Timer direction indicator icons */
.timer-direction {
    display: inline-block;
    margin-right: 0.5rem;
    font-size: 1rem;
    transform-origin: center;
}

.timer-direction.up {
    color: #4ecdc4;
}

.timer-direction.down {
    color: #ff6b6b;
}

/* Hide the original timer-mode-toggle */
.timer-mode-toggle {
    display: none !important;
}

/* Breathing Guide */
.breathing-guide {
    position: relative;
    width: 200px;
    height: 200px;
    margin: 2rem auto;
}

.breathing-guide .circle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100px;
    height: 100px;
    border: 2px solid var(--accent-color);
    border-radius: 50%;
    transition: all 1s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Breathing Animations */
@keyframes breathe-in {
    from {
        transform: translate(-50%, -50%) scale(1);
        border-color: var(--accent-color);
    }

    to {
        transform: translate(-50%, -50%) scale(1.5);
        border-color: var(--text-color);
    }
}

@keyframes breathe-out {
    from {
        transform: translate(-50%, -50%) scale(1.5);
        border-color: var(--text-color);
    }

    to {
        transform: translate(-50%, -50%) scale(1);
        border-color: var(--accent-color);
    }
}

@keyframes hold-breath {

    0%,
    100% {
        border-color: var(--text-color);
    }

    50% {
        border-color: var(--accent-color);
    }
}

/* Controls */
.timer-controls {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin: 1rem 0;
}

.timer-btn {
    background-color: var(--secondary-color);
    color: var(--text-color);
    border: 1px solid var(--accent-color);
    padding: 0.5rem 1.5rem;
    cursor: pointer;
    transition: all 0.3s ease;
    font-family: 'Courier New', monospace;
    border-radius: 3px;
}

.timer-btn:hover:not(:disabled) {
    background-color: var(--accent-color);
    color: var(--bg-color);
}

.timer-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* Timer Container */
.timer-container {
    position: relative;
    margin: 2rem auto;
    max-width: 800px;
    background-color: rgba(48, 48, 48, 0.7);
    border-radius: 10px;
    padding: 2rem;
}

/* Phase Timeline - Redesigned */
.phase-timeline {
    margin: 2rem 0;
    padding: 1.5rem 0.5rem;
    position: relative;
    min-height: 100px;
    overflow-x: auto;
    scrollbar-width: thin;
    scrollbar-color: var(--accent-color) var(--bg-color);
    background-color: rgba(15, 15, 15, 0.5);
    border-radius: 8px;
}

.phase-timeline::-webkit-scrollbar {
    height: 6px;
}

.timeline-track {
    position: absolute;
    top: 50%;
    left: 0;
    right: 0;
    height: 4px;
    background-color: var(--secondary-color);
    transform: translateY(-50%);
    border-radius: 2px;
}

.phase-connector {
    flex: 1;
    height: 4px;
    background: linear-gradient(90deg, rgba(48, 48, 48, 0.7), var(--secondary-color));
    position: relative;
    min-width: 30px;
    overflow: hidden;
    /* Add this to contain the progress fill */
}

.phase-connector::after {
    content: '';
    position: absolute;
    right: 0;
    top: 50%;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color: var(--secondary-color);
    transform: translate(50%, -50%);
}

/* New progress fill for phase connector */
.phase-connector .progress-fill {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 0%;
    /* Start at 0% */
    transition: width 0.5s linear;
    z-index: 1;
}

/* Color variants for progress fill based on phase type */
.phase-connector.focus .progress-fill {
    background: linear-gradient(90deg, rgba(255, 107, 107, 0.5), rgba(255, 107, 107, 0.8));
}

.phase-connector.break .progress-fill {
    background: linear-gradient(90deg, rgba(78, 205, 196, 0.5), rgba(78, 205, 196, 0.8));
}

.phase-connector.inhale .progress-fill {
    background: linear-gradient(90deg, rgba(69, 183, 209, 0.5), rgba(69, 183, 209, 0.8));
}

.phase-connector.hold .progress-fill {
    background: linear-gradient(90deg, rgba(150, 206, 180, 0.5), rgba(150, 206, 180, 0.8));
}

.phase-connector.exhale .progress-fill {
    background: linear-gradient(90deg, rgba(212, 163, 115, 0.5), rgba(212, 163, 115, 0.8));
}

.phase-indicators {
    position: relative;
    display: flex;
    justify-content: center;
    /* Changed from space-between to center */
    align-items: center;
    height: 100%;
    padding: 0 2rem;
    gap: 8px;
}

/* Redesigned phase indicator */
.phase-indicator {
    position: relative;
    min-width: 60px;
    height: 36px;
    border-radius: 18px;
    background-color: var(--bg-color);
    border: 2px solid var(--accent-color);
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 12px;
    margin: 0 4px;
    overflow: hidden;
    /* Keep this to contain the fill effect */
}

/* Phase indicator fill effect - replaces the internal progress bar */
.phase-indicator::after {
    content: none;
}

/* New progress fill element inside phase indicators */
.phase-indicator .progress-fill {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 0%;
    /* Start at 0% */
    z-index: -1;
    /* Behind content */
    transition: height 0.5s cubic-bezier(0.2, 0.8, 0.2, 1);
    opacity: 0.5;
}

/* Water ripple effect overlay */
.phase-indicator .progress-fill::after {
    content: '';
    position: absolute;
    top: -2px;
    /* Slightly above the water line */
    left: 0;
    width: 100%;
    height: 4px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    opacity: 0.8;
    animation: water-ripple 2s ease-out infinite;
}

@keyframes water-ripple {
    0% {
        transform: scale(0.8, 1);
        opacity: 0.8;
    }

    100% {
        transform: scale(1.05, 1);
        opacity: 0;
    }
}

/* Color variants for progress fill based on phase type */
.phase-indicator.focus .progress-fill {
    background: linear-gradient(to top, rgba(255, 107, 107, 0.8), rgba(255, 107, 107, 0.4));
}

.phase-indicator.break .progress-fill {
    background: linear-gradient(to top, rgba(78, 205, 196, 0.8), rgba(78, 205, 196, 0.4));
}

.phase-indicator.inhale .progress-fill {
    background: linear-gradient(to top, rgba(69, 183, 209, 0.8), rgba(69, 183, 209, 0.4));
}

.phase-indicator.hold .progress-fill {
    background: linear-gradient(to top, rgba(150, 206, 180, 0.8), rgba(150, 206, 180, 0.4));
}

.phase-indicator.exhale .progress-fill {
    background: linear-gradient(to top, rgba(212, 163, 115, 0.8), rgba(212, 163, 115, 0.4));
}

.phase-indicator::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 18px;
    border: 2px solid var(--accent-color);
    opacity: 0;
    transform: scale(1.1);
    transition: all 0.3s ease;
}

.phase-indicator.active {
    transform: translateY(-8px) scale(1.05);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.3);
    z-index: 2;
}

.phase-indicator.active::before {
    animation: pulse-rect 2s ease-in-out infinite;
}

@keyframes pulse-rect {
    0% {
        transform: scale(1);
        opacity: 0.8;
    }

    50% {
        transform: scale(1.15);
        opacity: 0;
    }

    100% {
        transform: scale(1);
        opacity: 0.8;
    }
}

/* Phase type colors */
.phase-indicator.focus {
    border-color: #ff6b6b;
    background: linear-gradient(135deg, rgba(255, 107, 107, 0.1), transparent);
}

.phase-indicator.break {
    border-color: #4ecdc4;
    background: linear-gradient(135deg, rgba(78, 205, 196, 0.1), transparent);
}

.phase-indicator.inhale {
    border-color: #45b7d1;
    background: linear-gradient(135deg, rgba(69, 183, 209, 0.1), transparent);
}

.phase-indicator.hold {
    border-color: #96ceb4;
    background: linear-gradient(135deg, rgba(150, 206, 180, 0.1), transparent);
}

.phase-indicator.exhale {
    border-color: #d4a373;
    background: linear-gradient(135deg, rgba(212, 163, 115, 0.1), transparent);
}

.phase-indicator:hover:not(.active) {
    transform: translateY(-4px);
}

.phase-indicator .phase-duration {
    font-size: 0.9rem;
    color: var(--text-color);
    opacity: 0.9;
    position: relative;
    z-index: 2;
    /* Ensure text stays above the fill */
}

.phase-indicator.active .phase-duration::before {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid var(--accent-color);
    opacity: 0.7;
}

@keyframes glow {

    0%,
    100% {
        box-shadow: 0 0 5px var(--accent-color),
            0 0 10px var(--accent-color);
    }

    50% {
        box-shadow: 0 0 15px var(--accent-color),
            0 0 25px var(--accent-color);
    }
}

/* Phase indicator active state */
.phase-indicator.focus.active {
    box-shadow: 0 0 15px rgba(255, 107, 107, 0.4);
}

.phase-indicator.break.active {
    box-shadow: 0 0 15px rgba(78, 205, 196, 0.4);
}

.phase-indicator.inhale.active {
    box-shadow: 0 0 15px rgba(69, 183, 209, 0.4);
}

.phase-indicator.hold.active {
    box-shadow: 0 0 15px rgba(150, 206, 180, 0.4);
}

.phase-indicator.exhale.active {
    box-shadow: 0 0 15px rgba(212, 163, 115, 0.4);
}

/* Edit Mode */
.edit-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 10px;
}

.edit-controls {
    display: flex;
    gap: 1rem;
}

.settings-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 1rem 0;
    padding: 0.5rem;
    border-bottom: 1px solid var(--secondary-color);
}

.notification-controls,
.sound-controls {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.control {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.notification-status {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.3rem 0.8rem;
    border-radius: 15px;
    font-size: 0.9rem;
}

.notification-status.enabled {
    background-color: rgba(100, 255, 218, 0.1);
    border: 1px solid var(--accent-color);
}

.notification-status.disabled {
    background-color: rgba(255, 100, 100, 0.1);
    border: 1px solid #ff6464;
}

/* Pattern Editor */
.pattern-editor.section {
    display: none;
    /* Hide all pattern editor functionality */
}

/* Remove pattern saving/editing styles */
.saved-patterns-section,
.saved-patterns-controls,
#saved-pattern-select,
.patterns-controls,
.delete-pattern,
.edit-phase-btn,
.phase-indicator.editable,
.phase-indicator.dragging {
    display: none;
}

/* Notification Animations */
@keyframes notification-flash {
    0% {
        color: var(--accent-color);
        text-shadow: 0 0 10px rgba(100, 255, 218, 0.3);
        transform: scale(1);
    }

    50% {
        color: #ff6464;
        text-shadow: 0 0 20px rgba(255, 100, 100, 0.5);
        transform: scale(1.1);
    }

    100% {
        color: var(--accent-color);
        text-shadow: 0 0 10px rgba(100, 255, 218, 0.3);
        transform: scale(1);
    }
}

.timer-display .time.flash {
    animation: notification-flash 1s ease-in-out;
}

/* Timer edit mode styles */
.timer-display .time.editable {
    cursor: pointer;
    position: relative;
}

.timer-display .time.editable:hover {
    text-shadow: 0 0 15px rgba(100, 255, 218, 0.5);
}

.timer-display .time.editing {
    outline: none;
}

/* Time segment styles */
.time-segment {
    display: inline-block;
    min-width: 70px;
    text-align: center;
    padding: 0 5px;
    transition: all 0.3s ease;
    position: relative;
}

.time-segment.active {
    background-color: rgba(100, 255, 218, 0.2);
    border-radius: 5px;
    animation: segment-pulse 1.5s infinite ease-in-out;
}

.time-segment-separator {
    display: inline-block;
    width: 20px;
    text-align: center;
}

@keyframes segment-pulse {

    0%,
    100% {
        box-shadow: 0 0 5px rgba(100, 255, 218, 0.5);
    }

    50% {
        box-shadow: 0 0 15px rgba(100, 255, 218, 0.8);
    }
}

/* Custom Timer Mode Toggle display fix */
.timer-mode-toggle {
    margin: 1rem auto;
    text-align: center;
    font-size: 0.9rem;
}

.timer-mode-toggle label {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    cursor: pointer;
}

.timer-mode-toggle input[type="checkbox"] {
    margin: 0;
}

/* Time container styles to fix layout */
.time-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1rem;
}

/* Return to Timer Notification */
.timer-return-notification {
    position: fixed;
    bottom: 20px;
    left: 20px;
    background-color: var(--secondary-color, #333);
    color: var(--text-color, #fff);
    padding: 15px;
    border-radius: 5px;
    border-left: 4px solid var(--accent-color, #64ffda);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    z-index: 9999;
    font-family: 'Courier New', monospace;
    display: flex;
    flex-direction: column;
    gap: 10px;
    max-width: 300px;
    transform: translateY(150%);
    transition: transform 0.3s ease;
}

.timer-return-notification.hiding {
    transform: translateY(150%);
}

#return-to-timer-btn {
    align-self: flex-end;
    background-color: var(--accent-color, #64ffda);
    color: var(--bg-color, #1d1d21);
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    font-family: 'Courier New', monospace;
    transition: all 0.3s ease;
    font-weight: bold;
}

#return-to-timer-btn:hover {
    background-color: var(--text-color, #fff);
    color: var(--accent-color, #64ffda);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

@keyframes slide-in {
    from {
        transform: translateY(150%);
    }

    to {
        transform: translateY(0);
    }
}

@keyframes slide-out {
    from {
        transform: translateY(0);
    }

    to {
        transform: translateY(150%);
    }
}

.timer-return-notification.hiding {
    animation: slide-out 0.3s ease forwards;
}

#return-to-timer-btn {
    align-self: flex-end;
    background-color: var(--accent-color);
    color: var(--bg-color);
    border: none;
    padding: 5px 10px;
    border-radius: 3px;
    cursor: pointer;
    font-family: 'Courier New', monospace;
    transition: all 0.3s ease;
}

#return-to-timer-btn:hover {
    background-color: var(--text-color);
    color: var(--accent-color);
}

/* Tab change confirmation dialog */
.tab-change-confirmation {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(29, 29, 33, 0.85);
    /* More refined semi-transparent background */
    backdrop-filter: blur(3px);
    /* Add blur effect for modern browsers */
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    border-radius: 10px;
    z-index: 100;
}

.tab-change-confirmation.active {
    opacity: 1;
    visibility: visible;
}

.confirmation-dialog {
    background-color: var(--secondary-color, #333);
    border: 1px solid var(--accent-color, #64ffda);
    border-radius: 8px;
    padding: 2rem;
    max-width: 400px;
    text-align: center;
    box-shadow: 0 0 30px rgba(100, 255, 218, 0.15);
    /* Subtle glow matching the accent color */
    animation: dialog-appear 0.3s ease-out;
    position: relative;
    overflow: hidden;
}

/* Add a subtle accent line at the top of the dialog */
.confirmation-dialog::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: linear-gradient(90deg, transparent, var(--accent-color, #64ffda), transparent);
}

@keyframes dialog-appear {
    from {
        transform: scale(0.8);
        opacity: 0;
    }

    to {
        transform: scale(1);
        opacity: 1;
    }
}

.confirmation-dialog h3 {
    color: var(--accent-color, #64ffda);
    margin-top: 0;
    margin-bottom: 1rem;
    font-size: 1.4rem;
    font-family: 'Courier New', monospace;
}

.confirmation-dialog p {
    margin-bottom: 1.5rem;
    line-height: 1.7;
    color: var(--text-color, #fff);
    opacity: 0.9;
}

.confirmation-buttons {
    display: flex;
    justify-content: center;
    gap: 1.2rem;
    margin-top: 1.5rem;
}

.timer-btn.warning {
    background-color: rgba(255, 100, 100, 0.15);
    border-color: #ff6464;
    transition: all 0.2s ease;
}

.timer-btn.warning:hover {
    background-color: #ff6464;
    color: var(--bg-color, #1d1d21);
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(255, 100, 100, 0.3);
}

/* Add animation for the cancel button too */
#cancel-tab-change {
    transition: all 0.2s ease;
}

#cancel-tab-change:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(100, 255, 218, 0.2);
}